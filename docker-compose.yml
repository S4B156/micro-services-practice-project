networks:
  microservices-net:
    driver: bridge
  ingest-service-net:
    driver: bridge

volumes:
  consul_data:
  postgres_data:

services:
  consul:
    image: consul:1.15
    container_name: consul
    restart: always
    ports:
      - "8500:8500"
    command: agent -server -bootstrap-expect=1 -node=consul-server -client=0.0.0.0 -ui -bind=0.0.0.0
    volumes:
      - consul_data:/consul/data
    networks:
      - microservices-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8500/v1/status/leader"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgresql:
    image: postgres:16-alpine
    container_name: postgresql
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_DB: ingest-service-db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      ingest-service-net:
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres_user -d ingest-service-db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  config-service:
    build: ./config-service
    container_name: config-service
    restart: on-failure
    ports:
      - "8888:8888"
    environment:
      - CONSUL_HOST=consul
      - CONFIG_LOCATION=/app/configs
    volumes:
      - ./configs:/app/configs
    depends_on:
      consul:
        condition: service_healthy
    networks:
      - microservices-net

  ingest-service:
    build: ./ingest-service
    container_name: ingest-service
    restart: on-failure
    environment:
      - CONSUL_HOST=consul
      - CONFIG_SERVER_HOST=config-service
      - INGEST_SERVICE_PORT=8080
      - DATASOURCE_URL=postgresql
      - DATASOURCE_USERNAME=postgres_user
      - DATASOURCE_PASSWORD=postgres_password
    depends_on:
      postgresql:
        condition: service_healthy
      config-service:
        condition: service_started
    networks:
      - microservices-net
      - ingest-service-net

  gateway-service:
    build: ./gateway-service
    container_name: gateway-service
    restart: on-failure
    ports:
      - "8080:8080"
    depends_on:
      - ingest-service
    environment:
      - CONSUL_HOST=consul
      - CONFIG_SERVER_HOST=config-service
    networks:
      - microservices-net